#include<bits/stdc++.h>
using namespace std;



int lcs(string a,string b, int n, int m){

    int dp[n+1][m+1];
    

    for(int i = 0; i< n+1; i++){
        dp[i][0] = 0;
    }
    for(int j = 0; j < m+1; j++){
        dp[0][j] = 0;
    }

    for(int i = 1; i<n+1; i++){
        for(int j = 1; j < m+1; j++){
            if(a[i-1] == b[j-1]){
                dp[i][j] = 1+dp[i-1][j-1];
            }else{
                dp[i][j] = max(dp[i-1][j],dp[i][j-1]);
            }
        }
    }

    //printing dp matrix:

    for(int i = 0; i<n+1; i++){
        for(int j = 0; j < m+1; j++){
            cout << dp[i][j] << " ";
        }
        cout << endl;
    }

    //printing lcs:

   string s = "";

	int  i = n,j = m;
	while(i > 0 && j > 0){
		if(a[i-1] == b[j-1]){
			s=s+ a[i-1];
			i--;
			j--;
		}
		else if(dp[i-1][j]>dp[i][j-1]){
			i--;

		}else{
			j--;
		}
	}

	reverse(s.begin(),s.end());
	cout << s << endl;


    return dp[n][m];

}


int main()
{

  ios::sync_with_stdio(0);
  cin.tie(0);

  
  int t;
  cin >> t;
  while(t--){

    int n,m;
    
    cin >>n >>m;
    string a,b;
    cin >> a >> b;


    int ans = lcs(a,b,n,m);

    cout << ans << endl;
}



}
